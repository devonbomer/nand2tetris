// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // 3 way OR with 2 OR gates
    Or(a=load, b=inc, out=lori);
    Or(a=lori, b=reset, out=loadin);

    // Reset logic. Negate, add to itself, increment (complements of 2's complement):
    Not16(in=regout, out=negout);
    Add16(a=negout, b=regout, out=toinc);

    // select to increment, between raw register and last step of zero out in reset (reset supersedes increment here)
    Mux16(a=regout, b=toinc, sel=reset, out=incmux);

    Inc16(in=incmux, out=incout);

    // reset supersedes load and increment. Here we supersede load
    Not(in=reset, out=notreset);
    And(a=load, b=notreset, out=loadset);
    Mux16(a=incout, b=in, sel=loadset, out=regin);

    Register(in=regin, load=loadin, out=regout, out=out);
}
